p({
  "class":"foam.core.boot.CSpec",
  "name":"demoHttpSinkUsingAtime",
  "description": "A demo http sink for SAFSink",
  "serviceScript":
  """
    return new foam.dao.HTTPSink(
      "http://localhost:7777/",
      null,
      foam.core.http.Format.JSON,
      new foam.lib.AndPropertyPredicate(
        x,
        new foam.lib.PropertyPredicate[] {
          new foam.lib.ExternalPropertyPredicate(),
          new foam.lib.NetworkPropertyPredicate(),
          new foam.lib.PermissionedPropertyPredicate()
        }
      ),
      false
    );
  """
})

p({
  "class":"foam.core.boot.CSpec",
  "name":"localInternalSessionDAO",
  "serviceScript":"""
    return new foam.dao.EasyDAO.Builder(x)
      .setOf(foam.core.session.Session.getOwnClassInfo())
      .setGuid(true)
      .setJournalName("sessionsinternal")
      .setJournalType(foam.dao.JournalType.SINGLE_JOURNAL)
      .setAuthorize(false)
      .setCluster(false)
      .setSaf(false)
      .setDecorator(new foam.dao.ValidatingDAO(x, new foam.dao.NullDAO(x, foam.core.session.Session.getOwnClassInfo())))
      .build();
  """
})

p({
  "class":"foam.core.boot.CSpec",
  "name":"internalSessionDAO",
  "serviceScript":"""
    return new foam.dao.EasyDAO.Builder(x)
      .setOf(foam.core.session.Session.getOwnClassInfo())
      .setInnerDAO(x.get("localInternalSessionDAO"))
      .setEnableInterfaceDecorators(false)
      .build();
  """,
  "client": "{\"of\":\"foam.core.session.Session\"}"
})

p({
  "class": "foam.core.boot.CSpec",
  "name": "healthStatusWatcher",
  "lazy": false,
  "serviceClass": "foam.core.saf.HealthStatusWatcher"
})

p({
  "class": "foam.core.boot.CSpec",
  "name": "shutdownWatcher",
  "lazy": false,
  "serviceClass": "foam.core.app.ShutdownWatcher"
})
